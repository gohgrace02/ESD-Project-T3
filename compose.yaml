volumes:
  pgdata:
  prometheusdata:
  grafanadata:
  rabbitmq_data:


networks:
  kong-net:
    driver: bridge
    name: kong-net

services:

  ####################################
  # RabbitMQ: The messaging broker   
  ####################################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: esd-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - ./rabbitmq.config:/etc/rabbitmq/rabbitmq.config
      - ./rabbitmq_definitions.json:/etc/rabbitmq/rabbitmq_definitions.json
      - rabbitmq_data:/var/lib/rabbitmq

  # #################################################
  # # Activity Log: The Activity Log microservice
  # #################################################
  activity_log:
    build:
      context: ./microservices/Activity_Log
      dockerfile: Dockerfile
    image: gohgrace/activity_log:esd
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      a_queue_name: Activity_Log
      PYTHONUNBUFFERED: 1

  # ###################################
  # # Error: The Error microservice
  # ###################################
  error:
    build:
      context: ./microservices/Error
      dockerfile: Dockerfile
    image: gohgrace/error:esd
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      e_queue_name: Error
      PYTHONUNBUFFERED: 1

  # ###############################################
  # # Back Project: The back_project microservice
  # ###############################################
  back_project:
    build:
      context: ./microservices/complex
      dockerfile: Dockerfile
    image: gohgrace/back_project:esd
    restart: always
    depends_on:
      - project
      - tracker
      - activity_log
      - error
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      project_URL: "http://project:5000/project"
      tracker_URL: "http://tracker:5001/project/{project_id}/tracker" #not sure if this is correct
      PYTHONUNBUFFERED: 1
    ports:
      - "5004:5004"

  ##################################
  # Project: The project microservice
  ##################################
  project:
    build:
      context: ./microservices/Project
      dockerfile: Dockerfile
    image: gohgrace/project:esd
    restart: always
    depends_on:
      - rabbitmq
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/project
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1
    ports:
      - "5000:5000"

  # ##################################
  # # Tracker: The tracker microservice
  # ##################################
  tracker:
    build:
      context: ./microservices/Tracker
      dockerfile: Dockerfile
    image: gohgrace/tracker:esd
    restart: always
    depends_on:
      - rabbitmq
    environment:
      # dbURL: mysql+mysqlconnector://root@localhost:3306/tracker
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/tracker
      rabbit_host: rabbitmq
      rabbit_port: 5672
      a_queue_name: Back_Project
      PYTHONUNBUFFERED: 1
    ports:
      - "5001:5001"

  ##################################
  # Vetting: The vetting microservice
  ##################################
  vetting:
    build:
      context: ./microservices/Vetting
      dockerfile: Dockerfile
    image: gohgrace/vetting:esd
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1
    ports:
      - "5005:5005"

  ##################################
  # Moderation: The moderation microservice
  ##################################
  moderation:
    build:
      context: ./microservices/Moderation
      dockerfile: Dockerfile
    image: gohgrace/moderation:esd
    restart: always
    depends_on:
      - rabbitmq
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/mod
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1
    ports:
      - "5006:5006"

  ##################################
  # Feedback: The Feedback microservice
  ##################################
  feedback:
    platform: linux/amd64  
    build:
      context: ./microservices/Feedback
      dockerfile: Dockerfile
    image: gohgrace/feedback:esd
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/feedback
      PYTHONUNBUFFERED: 1
    ports:
      - "5007:5007"

  # ##################################
  # # Stripe: The stripe microservice
  # ##################################
  # stripe:
  #   build:
  #     context: ./microservices/Stripe
  #     dockerfile: Dockerfile
  #   image: gohgrace/stripe:esd
  #   # restart: always
  #   environment:
  #     PYTHONUNBUFFERED: 1
  #   ports:
  #     - "5008:5008"

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:15 # tested 20231101; Ref: https://docs.konghq.com/gateway/latest/support/third-party/
    platform: linux/amd64  # <- required for Mac M1 chip. Otherwise, can remove
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong/kong-gateway:3.2.2.5 # tested 20231101
    platform: linux/amd64  # <- required for Mac M1 chip. Otherwise, can remove
    command: "kong migrations bootstrap"
    restart: on-failure
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong/kong-gateway:3.2.2.5 # tested 20231101
    platform: linux/amd64  # <- required for Mac M1 chip. Otherwise, can remove
    restart: always
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    depends_on:
      - kong-migration
    ports: # https://docs.konghq.com/gateway/latest/production/networking/default-ports/
      - "8000:8000" # Takes incoming HTTP traffic from Consumers, and forwards it to upstream Services.
      - "8443:8443" # Takes incoming HTTPS traffic from Consumers, and forwards it to upstream Services.
      - "8001:8001" # Admin API. Listens for calls from the command line over HTTP.
      - "8444:8444" # Admin API. Listens for calls from the command line over HTTPS.
      - "8002:8002" # Kong Manager (GUI). Listens for HTTP traffic.
      - "8445:8445" # Kong Manager (GUI). Listens for HTTPS traffic.
      - "8003:8003" # Dev Portal. Listens for HTTP traffic, assuming Dev Portal is enabled.
      - "8446:8446" # Dev Portal. Listens for HTTP traffic, assuming Dev Portal is enabled.
      - "8004:8004" # Dev Portal /files traffic over HTTPS, assuming the Dev Portal is enabled.
      - "8447:8447" # Dev Portal /files traffic over HTTPS, assuming the Dev Portal is enabled.

  #######################################
  # Prometheus
  #######################################
  prometheus:
    image: prom/prometheus:v2.49.1
    restart: always
    networks:
      - kong-net
    ports:
      - "9090:9090"
    volumes:
      - prometheusdata:/etc/prometheus

  #######################################
  # Grafana Open Source
  #######################################
  grafana:
    image: grafana/grafana-oss:10.2.3
    restart: always
    networks:
      - kong-net
    ports:
      - "13000:3000"
    volumes:
      - grafanadata:/var/lib/grafana
